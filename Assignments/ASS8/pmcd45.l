%{			
#include"y.tab.h"
#include"stdio.h"
#include"string.h"
int lineno=1;
%}

number [0-9]+|([0-9]*\.[0-9]+)	    
identifier [a-zA-Z][a-zA-Z0-9]*
%%

{identifier} {strcpy(yylval.var,yytext);
                return VAR;}

{number} {strcpy(yylval.var,yytext);
          return NUM;}

\n lineno++;

[\t ] ;

. {return yytext[0];}		
%%

/*

%{
#include "y.tab.h"  // Include the header file generated by Yacc/Bison which contains token definitions
#include "stdio.h"  // Include standard I/O library for printing
#include "string.h" // Include string library for string operations

int lineno = 1;    // Initialize a line number counter, starting from 1
%}

number [0-9]+|([0-9]*\.[0-9]+)  // Define a pattern for matching numbers (integers and floating-point)
identifier [a-zA-Z][a-zA-Z0-9]* // Define a pattern for matching identifiers (letters followed by letters or digits)

%%

{identifier} {                         // Match the identifier pattern
    strcpy(yylval.var, yytext);        // Copy the matched text to yylval.var (assuming yylval is defined in y.tab.h)
    return VAR;                        // Return the token type VAR
}

{number} {                             // Match the number pattern
    strcpy(yylval.var, yytext);        // Copy the matched text to yylval.var
    return NUM;                        // Return the token type NUM
}

\n lineno++;                           // Increment the line number counter on encountering a newline

[\t ] ;                                // Ignore tabs and spaces (no action taken)

. {return yytext[0];}                  // Return any other character as its ASCII value
%%

// Function to be used if the input is finished (optional but common in Flex)
int yywrap() {
    return 1;  // Indicates the end of the input
}

Detailed Explanation:
Header Section (%{ ... %}):

Include Statements:
#include "y.tab.h": Includes the header file generated by Yacc/Bison, which typically contains token type definitions and the union for yylval.
#include "stdio.h": Includes the standard I/O library, allowing the use of functions like printf.
#include "string.h": Includes the string handling library, allowing the use of functions like strcpy.
Global Variable:
int lineno = 1;: Initializes a global variable lineno to keep track of the current line number, starting at 1.
Definitions Section:

number [0-9]+|([0-9]*\.[0-9]+): Defines a regular expression to match numbers, either integers or floating-point numbers.
identifier [a-zA-Z][a-zA-Z0-9]*: Defines a regular expression to match identifiers, which start with a letter followed by any number of letters or digits.
Rules Section:

Identifiers:
{identifier}: When an identifier is matched:
strcpy(yylval.var, yytext);: Copies the matched text (yytext) to yylval.var. This assumes that yylval is a union defined in y.tab.h with a member var.
return VAR;: Returns the token type VAR.
Numbers:
{number}: When a number is matched:
strcpy(yylval.var, yytext);: Copies the matched text (yytext) to yylval.var.
return NUM;: Returns the token type NUM.
Newlines:
\n: When a newline is encountered:
lineno++;: Increments the line number counter.
Whitespace:
[\t ]: Matches tabs or spaces but performs no action (effectively ignoring them).
Other Characters:
.: Matches any other character:
return yytext[0];: Returns the ASCII value of the matched character.
Auxiliary Functions:

yywrap Function:
int yywrap() { return 1; }: Function called when the end of the input is reached. Returning 1 indicates that the input is complete.
Assumptions:
yylval is defined in the y.tab.h file, likely as a union with a char var[...]; member for storing strings.
VAR and NUM are token types defined in the y.tab.h file generated by Yacc/Bison.

*/
